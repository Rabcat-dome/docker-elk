input {
	# beats {
	# 	port => 5044
	# }

	# tcp {
	# 	port => 50000
	#	codec => line { charset => "Shift_JIS" }
	# }

	# file {
    # 	add_field => [ 'host', '127.0.0.1' ]
	# 	id => "tomcatstdout"
    #  	path => '/usr/share/logstash/log/out/*.log'
	# 	sincedb_path => "/usr/share/logstash/log/sincedb/sincedbout"
	# 	#codec => plain { charset=>"UTF-8" }
   	# }
	# file {
	# 	add_field => [ 'host', '127.0.0.1' ]
	# 	id => "tomcatstderr"
    #  	path => '/usr/share/logstash/log/err/*.log'
	# 	sincedb_path => "/usr/share/logstash/log/sincedb/sincedberr"
   	# }

	gelf {
    	id => "gelf"
    	use_udp => false
    	use_tcp => true
  	}
}

filter {
	prune {
   		blacklist_names => [ "source_host", "className", "facility" ]
  	}
  	mutate {
    	# Sets the default value for application, in case someone forgot to set it in their
    	# Gelf configuration
    	coerce => { "application" => "unknown_application" }
  	}
#   multiline {
#       pattern => '^[^\[]'
#       what => 'previous'  
#   }
	if [id] == "tomcatstdout"	{
		grok {
			match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} [%{GREEDYDATA:source}] %{LOGLEVEL:level} %{NOTSPACE:service} - %{GREEDYDATA:messageText}" }
		}
		mutate {
			add_field => { "application" => "tomcatstdout" }
		}
	}
	if [id] == "tomcatstderr"	{
		grok {
			match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:service} %{NOTSPACE:process} (?m)^%{LOGLEVEL:level}: %{GREEDYDATA:messageText}" }
		}
		mutate {
			add_field => { "application" => "tomcatstderr" }
		}
	}
}

output {
	# (Un)comment for debugging purposes
	stdout { codec => rubydebug }
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "logstash_internal"
		password => "${LOGSTASH_INTERNAL_PASSWORD}"
		index => "app-%{application}-%{+YYYY.MM.dd}"
	}
}
